/*
 Navicat Premium Data Transfer

 Source Server         : localhost
 Source Server Type    : MySQL
 Source Server Version : 50716
 Source Host           : localhost:3306
 Source Schema         : information_cache

 Target Server Type    : MySQL
 Target Server Version : 50716
 File Encoding         : 65001

 Date: 07/12/2019 11:53:05
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for article
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `created_at` timestamp(0) NULL DEFAULT NULL,
  `updated_at` timestamp(0) NULL DEFAULT NULL,
  `deleted_at` timestamp(0) NULL DEFAULT NULL,
  `content` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL,
  `title` varchar(80) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `tags` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `personal` int(10) UNSIGNED NULL DEFAULT 0,
  `categories` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `idx_article_deleted_at`(`deleted_at`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 30 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of article
-- ----------------------------
INSERT INTO `article` VALUES (20, '2019-09-29 11:42:08', '2019-09-29 11:42:08', NULL, '本文是对该文章的自己一些理解，附带实例。跟大家分享一下\nhttps://segmentfault.com/a/1190000020044435\n**call方法实现：**\n```javascript\nFunction.prototype.mycall = function(context,...arg){   // Function是所有函数对象的构造函数。这里给Function的原型声明了一个mycall方法，则所有的函数都拥有了这个mycall方法\n    const temp = Symbol(\"unique symbol\")  // symbol代表标识唯一性的ID（就算每次参数是unique symbol，但是temp都不相等）\n    context[temp] = this   // 这里的this 代表调用mycall的函数。this的指向：被谁调用，this就指向谁。这里的context就是传递的obj2。可以理解为obj2.fn = obj1.fn\n    context[temp](...arg)  // 这里通过展开运算符传递参数。展开运算符是传递参数的一种简写。调用fn函数\n    delete context[temp]  // 这时将obj2.fn删除。一定要删除，因为obj2本身是没有这个函数的，只是在传递作用域调用时，做一个临时属性\n}\n\nlet obj1 = {\n    name: \"obj1\",\n    fn: function(a,b,c){\n        console.log(this.name+\": \"+ a + b + c)\n    }\n}\nlet obj2 = {\n    name: \"obj2\",\n}\nobj1.fn.mycall(obj2,4,5,6)\n```\n**apply方法实现：**\n```javascript\nFunction.prototype.myApply = function (context, arg) { // apply和call实际上只有参数传递上的区别，传递的第二个参数是一个数组\n    const fn = Symbol(\'临时属性\')\n    context[fn] = this\n    context[fn](...arg)\n    delete context[fn]\n}\n\nlet obj1 = {\n    name: \"obj1\",\n    fn: function(a,b,c){\n        console.log(this.name+\": \"+ a + b + c)\n    }\n}\nlet obj2 = {\n    name: \"obj2\",\n}\nobj1.fn.myApply(obj2,[1,2,3])\n```\n**bind方法实现：**\n```javascript\nFunction.prototype.myBind = function (context, ...firstarg) {\n    const that = this // 当前调用myBind的函数            \n    const bindFn = function (...secoundarg) {   // bind的本质是将call方法封装成函数return 执行这个函数则调用call方法\n        return that.mycall(context, ...firstarg, ...secoundarg) // 调用bind的时候可能传一次参，调用bind返回的函数可能会再一次传参。\n   }\n    bindFn.prototype = Object.create(that.prototype) //  复制源函数的prototype给fToBind\n    return bindFn\n}\nlet obj1 = {\n    name: \"obj1\",\n    fn: function (...arg) {\n        console.log(this.name + \": \" + arg)\n    }\n}\nlet obj2 = {\n    name: \"obj2\",\n}\nlet fnAfterBind = obj1.fn.myBind(obj2, 1, 2, 3)\nfnAfterBind(4, 5, 6)\n```\n\n', '50行代码手写call，apply，bind方法', 'bind,call,apply', 0, 'javascript');
INSERT INTO `article` VALUES (21, '2019-09-29 11:42:38', '2019-09-29 11:42:38', NULL, ' 最近在写自己个人博客时，发布文章功能需要一个添加标签组件。点击加号，输入文本。就写了一个TagInputer组件,中间遇到了一些麻烦 跟大家分享一下\n \n **遇到的问题：**\n 1. input需要根据内容自适应宽度\n 2. 绑定contenteditable元素的值\n\n### 效果展示\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190924151329142.gif)\n**TagInputer.vue**\n```javascript\n<template>\n  <div class=\"tag-inputer-wrap\">\n    <div class=\"input-wrap\" v-for=\"(item,index) in tags\" v-bind:key=\"index\">\n      <div\n        class=\"my-input\"\n        contenteditable=\"true\"\n        v-text=\"item\"\n        @input=\"handleOnInput($event,index)\"\n      ></div>\n      <div class=\"cross\" @click=\"removeTag(index)\"></div>\n    </div>\n    <div class=\"plus\" @click=\"pushTag\" v-if=\"tags.length !== mmax\">\n      <div class=\"plus-icon\"></div>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      tags: [],\n      mmax: 3\n    };\n  },\n  props: [\"max\"],\n  methods: {\n    pushTag() {\n      const temp = JSON.parse(JSON.stringify(this.tags));\n      temp.push(\"\");\n      this.tags = temp;\n      this.$emit(\"change\", this.tags);\n    },\n    removeTag(index) {\n      const temp = JSON.parse(JSON.stringify(this.tags));\n      temp.splice(index, 1);\n      this.tags = temp;\n      this.$emit(\"change\", this.tags);\n    },\n    handleOnInput(e, index) {\n      this.tags[index] = e.target.innerText;\n      this.$emit(\"change\", this.tags);\n    }\n  },\n  mounted() {\n    if (this.max) {\n      this.mmax = this.max;\n    } else {\n      this.mmax = 3;\n    }\n  }\n};\n</script>\n<style scoped lang=\"scss\">\n.tag-inputer-wrap {\n  .input-wrap {\n    display: inline-block;\n    .my-input {\n      color: #66757f;\n      display: inline-block;\n      height: 22px;\n      min-width: 20px;\n      max-width: 100px;\n      outline: none;\n      overflow: hidden;\n      vertical-align: bottom;\n      border: 1px solid #cccccc;\n      margin-right: 3px;\n      text-indent: 3px;\n      font-size: 13px;\n      box-sizing: border-box;\n      border-radius: 2px;\n    }\n    .cross {  \n      // 画叉\n      width: 16px;\n      height: 16px;\n      position: relative;\n      display: inline-block;\n      vertical-align: middle;\n      &:hover {\n        cursor: pointer;\n      }\n    }\n    .cross::before,\n    .cross::after {\n      content: \"\";\n      position: absolute;\n      height: 16px;\n      width: 1.5px;\n      right: 9px;\n      background: #cccccc;\n    }\n    .cross::before {\n      transform: rotate(45deg);\n    }\n    .cross::after {\n      transform: rotate(-45deg);\n    }\n  }\n\n  .plus {\n    // 画加号\n    &:hover {\n      cursor: pointer;\n    }\n    &:active {\n      opacity: 0.7;\n    }\n    box-sizing: border-box;\n    display: inline-block;\n    width: 22px;\n    height: 22px;\n    border: 1px solid #ddd;\n    line-height: 22px;\n    text-align: center;\n    .plus-icon {\n      display: inline-block;\n      background: $twitter-blue;\n      height: 12px;\n      position: relative;\n      width: 2px;\n    }\n\n    .plus-icon:after {\n      background: $twitter-blue;\n      content: \"\";\n      height: 12px;\n      left: 0;\n      position: absolute;\n      top: 0;\n      width: 2px;\n      transform: rotateZ(90deg);\n    }\n  }\n}\n</style>\n```\n博客地址：https://github.com/pppercyWang/twitter-blog-vue', 'vue实现添加标签组件', '组件', 0, 'vue');
INSERT INTO `article` VALUES (22, '2019-09-29 11:43:25', '2019-09-29 11:43:25', NULL, '### 业务需求\n1. 多选近三个月的日期。\n2. 不能选择当日之前的日期。\n\n因为antd的日期组件都是选择单个日期或者日期范围。不符合需求，所以自己就实现了一个。写的不好的地方大家请指教\n### 效果展示\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190907150439773.gif)\n**测试组件**\n```javascript\n<CheckCalendar\n      visible={this.state.showCalendar}\n       onClose={()=>{\n            this.setState({\n                 showCalendar:false\n            })\n       }}\n       onConfirm={(isCheck)=>{\n            console.log(isCheck)\n            this.setState({\n                 showCalendar:false\n            })\n       }}\n       />\n```\n**CheckCalendar.jsx**\n```javascript\nimport React, { Component, Fragment } from \"react\";\nimport { cloneDeep, chunk } from \"lodash\";\nimport PropTypes from \'prop-types\';\nimport \"animate.css\";\nimport \"./index.scss\"\n\nclass CheckCalendar extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            dateTable: [],\n            isCheck: [],\n        }\n        this.calendar = React.createRef();\n        this.mask = React.createRef();\n    }\n\n    componentWillMount() {\n        this.initDateTable()\n    }\n\n    initDateTable() {\n        let temp = []\n        for (let i = 0; i < 2; i++) {  // 取近三个月内的日期\n            let obj = this.getDateTable(i);\n            temp.push(obj);\n        }\n        this.setState({\n            dateTable: temp\n        });\n    }\n\n    getDateTable(plus) {\n        let curDate = new Date()  //现在时间\n        let curYear = curDate.getFullYear();\n        let curMonth = curDate.getMonth() + 1;\n        let curDay = curDate.getDate();\n        if (curMonth + plus > 12) {\n            curYear++\n            curMonth = curMonth + plus - 12\n        } else {\n            curMonth = curMonth + plus\n        }\n        let date = new Date(curYear, curMonth, 0);\n        let year = date.getFullYear(); // 当前年\n        let month = date.getMonth() + 1; // 当前月\n        // console.log(`${year}年${month}月.`);\n\n        let date2 = new Date(year, month, 0);\n        let days = date2.getDate(); // 当月有多少天\n        // console.log(`当月有${days}天.`);\n\n        date2.setDate(1);\n        let day = date2.getDay(); // 当月第一天是星期几\n        // console.log(`当月第一天是星期${day}.`);\n\n        let list = [];\n\n        for (let i = 0; i < days + day; i++) {\n            if (i < day) {  // 头部补零\n                list.push({\n                    isActive: false,\n                    number: 0\n                });\n            } else {\n                if (plus === 0) {\n                    if ((i - day + 1) < curDay) {\n                        list.push({\n                            disable: true,\n                            isActive: false,\n                            number: i - day + 1\n                        });\n                    } else {\n                        list.push({\n                            isActive: false,\n                            number: i - day + 1\n                        });\n                    }\n                } else {\n                    list.push({\n                        isActive: false,\n                        number: i - day + 1\n                    });\n                }\n            }\n        }\n        let hlist = chunk(list, 7); // 转换为二维数组\n        let len = hlist.length;\n        let to = 7 - hlist[len - 1].length;\n\n        // 循环尾部补0\n        for (let i = 0; i < to; i++) {\n            hlist[len - 1].push({\n                isActive: false,\n                number: 0\n            });\n        }\n        if (month < 10) {\n            month = \"0\" + month\n        }\n        const str = `${year}-${month}`\n        return {\n            \"list\": hlist,\n            \"desc\": str\n        }\n    }\n\n    handleItemClick(desc, number, index, index1, index2) {\n        let temp = cloneDeep(this.state.dateTable)\n        const flag = !temp[index].list[index1][index2].isActive\n        temp[index].list[index1][index2].isActive = flag\n        this.setState({\n            dateTable: temp,\n        })\n        const arr = desc.split(\"-\");\n        if (number < 10) {\n            number = \"0\" + number\n        }\n        if (flag) {\n            let temp = cloneDeep(this.state.isCheck);\n            temp.push(arr[0] + \"-\" + arr[1] + \"-\" + number)\n            this.setState({\n                isCheck: temp\n            })\n        } else {\n            let temp = cloneDeep(this.state.isCheck);\n            let filted = temp.filter((item) => {\n                return item !== arr[0] + \"-\" + arr[1] + \"-\" + number\n            })\n            this.setState({\n                isCheck: filted\n            })\n        }\n    }\n\n    onExit = () => {\n        const { onCancel } = this.props;\n\n        onCancel && onCancel();\n    }\n\n    onConfirm = () => {\n        const { onConfirm } = this.props;\n\n        onConfirm && onConfirm(this.state.isCheck);\n    }\n\n    render() {\n        return this.props.visible ? (\n            <div className=\"calendar-mask\">\n                <div className=\"calendar-wrap animated fadeInUp\">\n                    <RenderCalendarHeader\n                        onExit={this.onExit}\n                    />\n                    <RenderChineseWeek />\n                    <RenderDateTemp\n                        dateTable={this.state.dateTable}\n                        handleItemClick={this.handleItemClick}\n                        self={this}\n                    />\n                    <div className=\"fake-area\"></div>\n                </div>\n                <RenderConfirm\n                    onConfirm={this.onConfirm}\n                />\n            </div>\n        ) : (<span></span>)\n    }\n}\n\n/**\n * 渲染表格每个item\n * \n */\nconst RenderDateItem = (props) => {\n    const { number, active } = props;\n\n    return number === 0 ?\n        (\n            <div className=\"date-wrap\">\n                <span className=\"left\"></span><div className=\"item\"></div><span className=\"right\"></span>\n            </div>\n        ) : props.disable ?\n            (\n                <div className=\"date-wrap\">\n                    <span className=\"left\"></span>\n                    <div className=\"item disable\">{number}</div>\n                    <span className=\"right\"></span>\n                </div>\n            ) :\n            (\n                <div className=\"date-wrap\">\n                    <span className=\"left\"></span>\n                    <div className={`item ${active ? \'active\' : \'\'}`} onClick={props.itemClick} >\n                        <span>{number}</span>\n                    </div>\n                    <span className=\"right\"></span>\n                </div>\n            )\n}\n\n/**\n * 日历顶部\n * @param props.onExit 退出事件 \n */\nconst RenderCalendarHeader = (props) => {\n    const { onExit } = props;\n    return (\n        <div className=\"header\">\n            <span>日期多选</span>\n            <div className=\"exit\" onClick={onExit}></div>\n        </div>\n    )\n}\n\n/**\n * 渲染中文日期\n */\nconst RenderChineseWeek = () => {\n    const weeks = [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"];\n    return (\n        <div className=\"week-wrap\">\n            {\n                weeks.map((item, index) => (\n                    <div className=\"week-item\" key={index}>{item}</div>\n                ))\n            }\n        </div>\n    )\n}\n\n/**\n * \n * @param props.dateTable 模板数组\n * @param prop.handleItemClick item点击事件\n * @param prop.self 父组件作用域\n */\nconst RenderDateTemp = (props) => {\n    const { dateTable, handleItemClick, self } = props;\n    return (\n        <Fragment>\n            {\n                dateTable.map((item, index) => {\n                    const arr = item.desc.split(\"-\");\n                    return (\n                        <div className=\"date-table\" key={index}>\n                            <span className=\"desc\">\n                                {arr[0] + \"年\" + arr[1] + \"月\"}\n                            </span>\n                            {\n                                item.list.map((item2, index2) => {\n                                    return (\n                                        <div className=\"row\" key={index2}>\n                                            {\n                                                item2.map((item3, index3) => {\n                                                    return (\n                                                        <RenderDateItem\n                                                            itemClick={handleItemClick.bind(self, item.desc, item3.number, index, index2, index3)}\n                                                            active={item3.isActive}\n                                                            disable={item3.disable ? item3.disable : false}\n                                                            number={item3.number}\n                                                            key={index3}\n                                                        />\n                                                    )\n                                                })\n                                            }\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                    );\n                })\n            }\n        </Fragment>\n    )\n}\n\nconst RenderConfirm = (props) => {\n    return (\n        <div className=\"confirm-wrap\">\n            <div className=\"confirm\" onClick={props.onConfirm}>\n                确定\n            </div>\n        </div>\n    )\n}\n\n/**\n * @param onCancel 关闭事件回调\n * @param onConfirm 确认事件回调\n * @param visible 组件显示状态\n */\nCheckCalendar.propTypes = {\n    onCancel: PropTypes.func,\n    onConfirm: PropTypes.func,\n    visible: PropTypes.bool\n}\n\nexport default CheckCalendar;\n```\n**checkCalendar.scss**\n```css\n.calendar-mask {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n\n    .calendar-wrap {\n        z-index: 999;\n        width: 100%;\n        height: 100%;\n        background-color: #ffffff;\n        overflow: auto;\n        animation-duration: .3s;\n\n        .header {\n            color: black;\n            font-size: 17px;\n            font-weight: bold;\n            height: 30px;\n            line-height: 30px;\n\n            .exit {\n                width: 20px;\n                height: 20px;\n                position: relative;\n                float: left;\n                left: 20px;\n                top: 5px;\n            }\n\n            .exit::before,\n            .exit::after {\n                content: \"\";\n                position: absolute;\n                height: 20px;\n                width: 1.5px;\n                left: 8.5px;\n                background: #098fef;\n            }\n\n            .exit::before {\n                transform: rotate(45deg);\n            }\n\n            .exit::after {\n                transform: rotate(-45deg);\n            }\n\n        }\n\n        .week-wrap {\n            display: flex;\n            font-size: 16px;\n            border-bottom: 1px solid rgb(221, 221, 221);\n\n            .week-item {\n                height: 30px;\n                line-height: 30px;\n                width: 14.28571429%;\n            }\n        }\n\n        .date-table {\n            margin-top: 20px;\n\n            .desc {\n                text-align: left;\n                text-indent: 12px;\n                font-size: 18px;\n            }\n\n            .row {\n                display: flex;\n                margin: 8px 0px;\n\n                .date-wrap {\n                    height: 35px;\n                    width: 14.28571429%;\n                    line-height: 30px;\n\n                    .left {\n                        width: 100%;\n                    }\n\n                    .item {\n                        display: inline-block;\n                        width: 35px;\n                        height: 35px;\n                        font-size: 15px;\n                        font-weight: bold;\n                        line-height: 35px;\n                        border-radius: 50%;\n                    }\n\n                    .disable {\n                        background-color: rgb(238, 238, 238);\n                        color: rgb(187, 187, 187);\n                    }\n\n                    .active {\n                        background-color: #108ee9;\n                        color: #ffffff;\n                    }\n\n                    .right {\n                        width: 100%;\n                    }\n                }\n            }\n        }\n\n        .fake-area {\n            height: 53px;\n            width: 100%;\n        }\n    }\n\n    .confirm-wrap {\n        position: fixed;\n        bottom: 0;\n        height: 54px;\n        width: 100%;\n        box-sizing: border-box;\n        border-top: 1px solid rgb(221, 221, 221);\n        background-color: rgb(247, 247, 247);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        .confirm {\n            border-radius: 5px;\n            width: 90%;\n            background-color: #108ee9;\n            font-size: 18px;\n            color: #ffffff;\n            padding: 8px 0;\n\n            &:active {\n                background-color: rgb(14, 128, 210);\n                color: rgb(85, 166, 223)\n            }\n        }\n    }\n}\n```', 'react模仿antd手写一个多选日期日历组件', 'antd,日历,组件', 0, 'react');
INSERT INTO `article` VALUES (23, '2019-09-29 11:44:05', '2019-09-29 11:44:05', NULL, '博主在刚接触前端的时候，不知道自己是先学习vue还是react呢。现在写vue工作也大半年了，想接触一下react，了解两种框架之间的异同。\n\n记得半年前看过react的官方教程。跟着写一个井字棋游戏。各种jsx标签的嵌套，数据驱动。对于那时候作为小白的我看的还是有点懵。今天用react写了个todolist，建议想学react的朋友可以先从这个入门\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2019082315253313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjU2NTEzNw==,size_16,color_FFFFFF,t_70)\n### Github:\nhttps://github.com/pppercyWang/react-todolist\n', 'react极速入门小demo——todolist', '入门,demo', 0, 'react');
INSERT INTO `article` VALUES (24, '2019-09-29 11:44:47', '2019-09-29 11:44:47', NULL, '### 效果展示\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190818140743784.gif)\n### 父组件中使用\n```javascript\n<radio-group v-model=\"radioIschecked\">\n          <radio label=\"个人\" value=\"1\"></radio>\n          <radio label=\"收藏\" value=\"2\"></radio>\n</radio-group>\n```\n### Radio.vue\n```javascript\n<template>\n  <div class=\"radio-wrap\">\n    <div class=\"left\" :class=\"isChecked?\'box-click\':\'\'\" ref=\"box\" @click=\"handleClick\">\n      <transition name=\"fade\">\n        <div class=\"circle\" v-show=\"isChecked\"></div>\n      </transition>\n    </div>\n    <div class=\"right\">{{label}}</div>\n  </div>\n</template>\n<script lang=\'ts\'>\nimport { Component, Vue, Watch, Prop } from \"vue-property-decorator\";\n@Component({\n  components: {}\n})\nexport default class extends Vue {\n  private isChecked: boolean = false;\n  @Prop()\n  private label!: string;\n  @Prop()\n  private value!: string;\n  private handleClick() {\n    this.isChecked = !this.isChecked;\n    if (this.isChecked) {\n      this.$parent.$emit(\"radioChange\", this.value);\n    }\n  }\n  private checkIsActive(value) {\n    if (this.value === value) {\n      this.isChecked = true;\n    } else {\n      this.isChecked = false;\n    }\n  }\n}\n</script>\n<style scoped lang=\"scss\">\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.2s;\n}\n.fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {\n  opacity: 0;\n}\n.radio-wrap {\n  height: 24px;\n  display: inline-block;\n  vertical-align: center;\n  margin-bottom: 5px;\n  .left {\n    height: 24px;\n    width: 24px;\n    border-radius: 50%;\n    background-color: #ffffff;\n    display: inline-block;\n    border: 1.2px solid #cccccc;\n    box-sizing: border-box;\n    .circle {\n      margin-left: 9px;\n      margin-top: 9px;\n      border-radius: 50%;\n      width: 6px;\n      height: 6px;\n      background-color: #ffffff;\n    }\n  }\n  .left:hover {\n    cursor: pointer;\n  }\n  .right {\n    margin-left: 5px;\n    padding-right: 10px;\n    display: inline;\n    vertical-align: top; // 内联元素默认的vertical-align为baseline。对象的内容与基线对齐。如果我们在right插入文字。则为出现left right不水平对齐的情况\n    line-height: 24px;\n    color: #66757f; // 在mounted\n    font-size: 15px;\n  }\n  .box-click {\n    background-color: #1da1f2;\n    border: 0.5px solid #cccccc;\n  }\n}\n</style>\n```\n### RadioGroup.vue\n```\n<template>\n  <div class=\"radio-group-wrap\">\n    <slot></slot>\n  </div>\n</template>\n<script lang=\'ts\'>\nimport { Component, Vue, Watch, Prop } from \"vue-property-decorator\";\n@Component({\n  components: {}\n})\nexport default class extends Vue {\n  @Prop()\n  private value!: string;\n  private dispatch(value) {\n    // 调用所有子组件的checkIsActive方法\n    this.$children.forEach(item => {\n      const temp: any = item; // ts还是不好用。。。\n      temp.checkIsActive(value);\n    });\n  }\n  private radioChange(value) {\n    this.$emit(\"input\", value);\n    this.dispatch(value);\n  }\n  private mounted() {\n    if (this.value) {\n      this.dispatch(this.value);\n    }\n    this.$on(\"radioChange\", this.radioChange);\n  }\n}\n</script>\n<style scoped lang=\"scss\">\n</style>\n```\n\n\n这里script部分是用ts写的，你可以改成js的语法。template和style部分不用改。', 'vue实现自定义radio组件', 'radio,组件', 0, 'vue');
INSERT INTO `article` VALUES (25, '2019-09-29 11:45:17', '2019-09-29 11:45:17', NULL, '关于vuex，我们听到最多的是vuex是一个状态管理容器，可以解决组件之间通信的痛点。但vuex真的只是这样吗？\n\n平时，我更喜欢将vuex比喻成一个**前端程序的数据库**。他可以储存各种数据，需要什么直接过去拿就行。我们都知道，单页面应用只要页面跳转了，data中的数据都会清空。但store中的数据不会清空，只有在页面刷新时，会清空store中的数据\n\n### 一.那我们是不是可以这样设计？\n**当我们需要获取数据时，在action中发起请求，然后将数据直接放到store里面。每当我们进入这个页面，都先判断一下store中有没有这些数据，如果有就直接拿，没有的话就通过action发出请求**\n\n### 二.实际应用\n#### 场景说明：\n这是一个移动端的产品，首页有轮播图组件。每次我们进入这个页面，都需要发起请求获取轮播图的一些数据。大家可以想像一下。通常我们我们使用这个应用的时候，点击美食 > 退回首页 > 点击酒店 >退回首页 ......\n\n我们进入首页的时候非常多，如果每次进入这个页面，都从created钩子去获取数据，会发起很多次请求。其实这是根本没有必要的。利用之前的思想，我们就可以实现如下效果。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190709101809911.gif)\n#### Demo地址：\n https://github.com/pppercyWang/vue-typescript-mobile\n**关于分页数据的处理可以看这个PC端的管理平台模板**\nhttps://github.com/pppercyWang/vue-typescript-admin\n### 三.那我所有的请求都要在action中去请求，然后存在store中吗？\n其实是没有必要的。比如说一些列表的数据可以放在store中。但是一些短暂性的请求（比如删除，修改）就直接写在methods中就可以了。\n如果有讲的不好的地方，欢迎指正。qq:845082868\n### 四.总结\n**Vuex大法好！**', 'Vuex在Vue工程的正确使用', 'vuex,状态管理', 0, 'vue');
INSERT INTO `article` VALUES (26, '2019-09-29 11:46:46', '2019-09-29 11:46:46', NULL, '\n# Github地址：\n**[https://github.com/pppercyWang/vue-typescript-admin](https://github.com/pppercyWang/vue-typescript-admin)**\n\n**最近经常看到Typescript的一些文章。决定自己也尝试用一下，感觉还不错。这里就写了一个模板跟大家下分享下**\n\n\n### 项目结构\n```javascript\npublic\n  css\n    icon.css ---iconfont的font-class引入\nsrc \n  api ---api接口\n  assets ---静态资源\n  components ---组件库\n  store ---vuex\n  utils\n    http.ts ---封装了axios\n  views ---视图\ninterface.ts ---ts自定义类型\nmain.ts ---程序主配置文件\nrouter.ts ---路由配置\nvue.config.js ---vue-cli3配置文件\ntsconfig.json ---ts配置文件\ntslint.json ---语法检查配置文件\n```\n\n### vue + vuex + typescript + element-ui + axios \n', 'Vue+Typescript的PC端管理平台模板', 'template,pc', 0, 'typescript');
INSERT INTO `article` VALUES (27, '2019-09-29 11:47:47', '2019-09-29 11:47:47', NULL, '不知道大家在用一些UI框架，比如Element-ui的时候，有没有觉得一些全局组件。this.$message(),this.Toast()等，用起来很爽。他们不像其他的组件，需要去导入，去注册。麻烦的很。\n看了Element的源码，自己也撸了一个。其中包括了以前没有接触过的插件知识，哎，感觉自己对Vue的理解还是不够，只停留在了使用的这阶段。需要更多的往深层次的地方去钻。不说废话了，直接上代码。\n# 效果演示\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190814144315527.gif)\n全局组件需要一个index.js文件去注册\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190814145332655.png)\n### BlogMessage.vue\n这里的script是用ts写的。大家只需将这里稍做修改就可以了\n```javascript\n<template>\n  <transition name=\"slide\">\n    <div class=\"message-wrap\" :class=\"type\" v-if=\"visible\">\n      <div class=\"content\">{{content}}</div>\n    </div>\n  </transition>\n</template>\n<script lang=\'ts\'>\nimport { Component, Vue, Watch, Prop } from \"vue-property-decorator\";\n@Component({\n  components: {}\n})\nexport default class extends Vue {\n  private content: string = \"\";\n  private visible: boolean = false;\n  private type: string = \"info\"; // \'success\',\'error\'\n  private startTimer() {\n    window.setTimeout(() => {\n      this.visible = false;\n    }, 3000);\n  }\n  private mounted() {\n    this.startTimer();\n  }\n}\n</script>\n<style scoped lang=\"scss\">\n.message-wrap {\n  position: fixed;\n  background-color: #44b0f3;\n  color: #ffffff;\n  left: 40%;\n  width: 20%;\n  top: 25px;\n  height: 40px;\n  z-index: 1001;\n  border-radius: 4px;\n  text-align: center;\n  border: 1px solid #ebeef5;\n  .content {\n    line-height: 40px;\n  }\n}\n.error {\n  background-color: #fef0f0;\n  color: #f56c6c;\n}\n.success {\n  background-color: #f0f9eb;\n  color: #67c23a;\n}\n.slide-enter-active,\n.slide-leave-active {\n  transition: all 0.3s cubic-bezier(1, 0.5, 0.8, 1);\n  transition: all 0.2s ease;\n}\n.slide-enter,\n.slide-leave-to {\n  transform: translateY(-20px);\n  opacity: 0;\n}\n</style>\n```\n### index.js\n```javascript\nimport Vue from \'vue\'\nimport BlogMessage from \'./BlogMessage.vue\'\nconst MessageBox = Vue.extend(BlogMessage) // 创建的是一个组件构造器，不是实例\nconst Message = {\n  install: (options, type, duration) => {\n    if (options === undefined || options === null) {\n      options = {\n        content: \'\'\n      }\n    } else if (typeof options === \'string\' || typeof options === \'number\') {\n      options = {\n        content: options\n      }\n      if (type != undefined && options != null) {\n        options.type = type;\n      }\n    }\n    let instance = new MessageBox({\n      data: options\n    }).$mount()\n    document.body.appendChild(instance.$el) // 添加dom元素\n    Vue.nextTick(() => { // dom元素渲染完成后执行回调\n      instance.visible = true\n    })\n  }\n}\nVue.prototype.$message = Message.install;\n[\'success\', \'error\'].forEach(type => {\n  Vue.prototype.$message[type] = (content) => {\n    return Vue.prototype.$message(content, type)\n  }\n})\nexport default Message\n```\n### 使用组件\n1. 全局注册\n```javascript\nimport Vue from \'vue\';\nimport Message from \'@/components/common/message\';\nVue.use(Message);\n```\n2. 调用方法\n```javascript\n  private test1() {\n    this.$message(\"这是一条普通消息\");\n  }\n  private test2() {\n    this.$message.success(\"这是一条成功消息\");\n    // this.$message(\"这是一条成功消息\", \"success\");\n  }\n  private test3() {\n    this.$message.error(\"这是一条失败消息\");\n    // this.$message(\"这是一条失败消息\", \"error\");\n  }\n```\n', 'vue写一个全局Message组件', '组件,message,element', 0, 'vue');
INSERT INTO `article` VALUES (28, '2019-11-13 07:33:10', '2019-11-13 07:33:10', NULL, '\n### 效果演示:\n需求：出现搜索窗口后，点击搜索窗口外关闭搜索窗口\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191031160336774.gif)\n**vueClickOutSize.js:**\n```javascript\nconst clickOutside = {\n    // 初始化指令\n    bind(el, binding, vnode) {\n      function clickHandler(e) {\n        // 这里判断点击的元素是否是本身，是本身，则返回\n        if (el.contains(e.target)) {\n          return false;\n        }\n        // 判断指令中是否绑定了函数\n        if (binding.expression) {\n          // 如果绑定了函数 则调用那个函数，此处binding.value就是handleClose方法\n          binding.value(e);\n        }\n      }\n      // 给当前元素绑定个私有变量，方便在unbind中可以解除事件监听\n      el.__vueClickOutside__ = clickHandler;\n      document.addEventListener(\"click\", clickHandler);\n    },\n    unbind(el, binding) {\n      // 解除事件监听\n      document.removeEventListener(\"click\", el.__vueClickOutside__);\n      delete el.__vueClickOutside__; // 删除属性\n    }\n  };\n  export default clickOutside\n```\n**使用：**\n```javascript\nimport clickOutside from \"@/directives/vueClickOutSize\";\nexport default {\n  data() {\n    return {\n      flag: false\n    };\n  },\n  components: {\n    SmallArticleItem\n  },\n  directives: { clickOutside },\n  props: [\"placeholder\"],\n  methods: {\n    closeSearchBar() {  \n      if (this.flag === false) {  //可能在第一次点击时也会触发。这里做个判断\n        this.flag = true;\n      } else {\n        this.$emit(\"onClose\");\n      }\n    },\n  },\n};\n```\n**实例见: https://github.com/pppercyWang/twitter-blog-vue**', 'vue实现自定义指令 点击元素区域外执行事件', '指令', 0, 'vue');
INSERT INTO `article` VALUES (29, '2019-11-13 07:36:15', '2019-11-13 07:36:15', NULL, '\n# vue-emoji-comment\n\n最近在写自己的个人博客时，还差最后一个评论功能，一个没有评论功能的博客是没有灵魂的，哈哈哈。\n##### 项目源码：https://github.com/pppercyWang/vue-emoji-comment \n### 效果演示\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191112173026640.gif)\n\n使用精灵图 + 背景定位实现，大家也可以自定义这些emoji表情。看看源码，有注释。就明白怎么弄了。\n\n这里推荐一个做精灵图的在线地址：https://sprite.ydr.me/\n\n##### 个人博客查看实例：https://github.com/pppercyWang/twitter-blog-vue  ', '基于vue的emoji表情评论组件', '评论,emoji,表情', 0, 'vue');

-- ----------------------------
-- Table structure for article_category
-- ----------------------------
DROP TABLE IF EXISTS `article_category`;
CREATE TABLE `article_category`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `created_at` timestamp(0) NULL DEFAULT NULL,
  `updated_at` timestamp(0) NULL DEFAULT NULL,
  `deleted_at` timestamp(0) NULL DEFAULT NULL,
  `category_id` int(10) UNSIGNED NOT NULL,
  `article_id` int(10) UNSIGNED NOT NULL,
  `category_name` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `idx_article_category_deleted_at`(`deleted_at`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 35 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of article_category
-- ----------------------------
INSERT INTO `article_category` VALUES (1, '2019-09-25 02:43:28', '2019-09-25 02:43:28', NULL, 2, 9, 'javascript');
INSERT INTO `article_category` VALUES (2, '2019-09-25 02:43:28', '2019-09-25 02:43:28', NULL, 3, 9, 'react');
INSERT INTO `article_category` VALUES (3, '2019-09-25 02:45:29', '2019-09-25 02:45:29', NULL, 2, 10, 'javascript');
INSERT INTO `article_category` VALUES (4, '2019-09-25 02:45:29', '2019-09-25 02:45:29', NULL, 3, 10, 'react');
INSERT INTO `article_category` VALUES (5, '2019-09-25 02:49:06', '2019-09-25 02:49:06', NULL, 2, 11, 'javascript');
INSERT INTO `article_category` VALUES (6, '2019-09-25 02:49:06', '2019-09-25 02:49:06', NULL, 3, 11, 'react');
INSERT INTO `article_category` VALUES (7, '2019-09-25 02:59:50', '2019-09-25 02:59:50', NULL, 2, 12, 'javascript');
INSERT INTO `article_category` VALUES (8, '2019-09-25 02:59:50', '2019-09-25 02:59:50', NULL, 3, 12, 'react');
INSERT INTO `article_category` VALUES (9, '2019-09-25 03:01:49', '2019-09-25 03:01:49', NULL, 2, 13, 'javascript');
INSERT INTO `article_category` VALUES (10, '2019-09-25 03:01:49', '2019-09-25 03:01:49', NULL, 3, 13, 'react');
INSERT INTO `article_category` VALUES (11, '2019-09-25 03:02:11', '2019-09-25 03:02:11', NULL, 2, 14, 'javascript');
INSERT INTO `article_category` VALUES (12, '2019-09-25 03:02:11', '2019-09-25 03:02:11', NULL, 3, 14, 'react');
INSERT INTO `article_category` VALUES (13, '2019-09-25 03:02:25', '2019-09-25 03:02:25', NULL, 1, 15, 'nodejs');
INSERT INTO `article_category` VALUES (14, '2019-09-25 03:02:25', '2019-09-25 03:02:25', NULL, 5, 15, 'express');
INSERT INTO `article_category` VALUES (15, '2019-09-25 03:02:48', '2019-09-25 03:02:48', NULL, 4, 16, 'vue');
INSERT INTO `article_category` VALUES (16, '2019-09-25 03:02:48', '2019-09-25 03:02:48', NULL, 7, 16, 'golang');
INSERT INTO `article_category` VALUES (17, '2019-09-25 03:02:48', '2019-09-25 03:02:48', NULL, 5, 16, 'express');
INSERT INTO `article_category` VALUES (18, '2019-09-25 03:03:57', '2019-09-25 03:03:57', NULL, 4, 17, 'vue');
INSERT INTO `article_category` VALUES (19, '2019-09-25 03:03:57', '2019-09-25 03:03:57', NULL, 7, 17, 'golang');
INSERT INTO `article_category` VALUES (20, '2019-09-25 03:03:57', '2019-09-25 03:03:57', NULL, 5, 17, 'express');
INSERT INTO `article_category` VALUES (21, '2019-09-25 03:06:00', '2019-09-25 03:06:00', NULL, 4, 18, 'vue');
INSERT INTO `article_category` VALUES (22, '2019-09-25 03:06:00', '2019-09-25 03:06:00', NULL, 7, 18, 'golang');
INSERT INTO `article_category` VALUES (23, '2019-09-25 03:06:01', '2019-09-25 03:06:01', NULL, 5, 18, 'express');
INSERT INTO `article_category` VALUES (24, '2019-09-25 09:50:17', '2019-09-25 09:50:17', NULL, 4, 19, 'vue');
INSERT INTO `article_category` VALUES (25, '2019-09-29 11:42:08', '2019-09-29 11:42:08', NULL, 2, 20, 'javascript');
INSERT INTO `article_category` VALUES (26, '2019-09-29 11:42:38', '2019-09-29 11:42:38', NULL, 4, 21, 'vue');
INSERT INTO `article_category` VALUES (27, '2019-09-29 11:43:25', '2019-09-29 11:43:25', NULL, 3, 22, 'react');
INSERT INTO `article_category` VALUES (28, '2019-09-29 11:44:05', '2019-09-29 11:44:05', NULL, 3, 23, 'react');
INSERT INTO `article_category` VALUES (29, '2019-09-29 11:44:47', '2019-09-29 11:44:47', NULL, 4, 24, 'vue');
INSERT INTO `article_category` VALUES (30, '2019-09-29 11:45:17', '2019-09-29 11:45:17', NULL, 4, 25, 'vue');
INSERT INTO `article_category` VALUES (31, '2019-09-29 11:46:46', '2019-09-29 11:46:46', NULL, 9, 26, 'typescript');
INSERT INTO `article_category` VALUES (32, '2019-09-29 11:47:47', '2019-09-29 11:47:47', NULL, 4, 27, 'vue');
INSERT INTO `article_category` VALUES (33, '2019-11-13 07:33:10', '2019-11-13 07:33:10', NULL, 4, 28, 'vue');
INSERT INTO `article_category` VALUES (34, '2019-11-13 07:36:15', '2019-11-13 07:36:15', NULL, 4, 29, 'vue');

-- ----------------------------
-- Table structure for category
-- ----------------------------
DROP TABLE IF EXISTS `category`;
CREATE TABLE `category`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `created_at` timestamp(0) NULL DEFAULT NULL,
  `updated_at` timestamp(0) NULL DEFAULT NULL,
  `deleted_at` timestamp(0) NULL DEFAULT NULL,
  `name` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `idx_category_deleted_at`(`deleted_at`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 10 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of category
-- ----------------------------
INSERT INTO `category` VALUES (1, '2019-09-24 10:39:26', '2019-09-24 10:39:26', NULL, 'nodejs');
INSERT INTO `category` VALUES (2, '2019-09-25 01:47:44', '2019-09-25 01:47:44', NULL, 'javascript');
INSERT INTO `category` VALUES (3, '2019-09-25 01:47:46', '2019-09-25 01:47:46', NULL, 'react');
INSERT INTO `category` VALUES (4, '2019-09-25 01:47:50', '2019-09-25 01:47:50', NULL, 'vue');
INSERT INTO `category` VALUES (5, '2019-09-25 01:47:58', '2019-09-25 01:47:58', NULL, 'express');
INSERT INTO `category` VALUES (6, '2019-09-25 01:48:03', '2019-09-25 01:48:03', NULL, 'egg.js');
INSERT INTO `category` VALUES (7, '2019-09-25 01:48:09', '2019-09-25 01:48:09', NULL, 'golang');
INSERT INTO `category` VALUES (8, '2019-09-25 09:40:20', '2019-09-25 09:40:20', NULL, 'Java');
INSERT INTO `category` VALUES (9, '2019-09-29 11:46:09', '2019-09-29 11:46:09', NULL, 'typescript');

-- ----------------------------
-- Table structure for comment
-- ----------------------------
DROP TABLE IF EXISTS `comment`;
CREATE TABLE `comment`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `created_at` timestamp(0) NULL DEFAULT NULL,
  `updated_at` timestamp(0) NULL DEFAULT NULL,
  `deleted_at` timestamp(0) NULL DEFAULT NULL,
  `content` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `article_id` int(10) UNSIGNED NULL DEFAULT NULL,
  `git_user_id` int(10) UNSIGNED NULL DEFAULT NULL,
  `username` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `avatar_url` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `github_url` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `idx_comment_deleted_at`(`deleted_at`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 30 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of comment
-- ----------------------------
INSERT INTO `comment` VALUES (18, '2019-11-13 06:12:20', '2019-11-13 06:12:20', NULL, 'xxxx', 20, 41534764, 'pppercyWang', 'https://avatars3.githubusercontent.com/u/41534764?v=4', 'https://github.com/pppercyWang');
INSERT INTO `comment` VALUES (19, '2019-11-13 06:56:59', '2019-11-13 06:56:59', NULL, 'ccc', 20, 41534764, 'pppercyWang', 'https://avatars3.githubusercontent.com/u/41534764?v=4', 'https://github.com/pppercyWang');
INSERT INTO `comment` VALUES (20, '2019-11-13 06:57:06', '2019-11-13 06:57:06', NULL, 'vvvv', 20, 41534764, 'pppercyWang', 'https://avatars3.githubusercontent.com/u/41534764?v=4', 'https://github.com/pppercyWang');
INSERT INTO `comment` VALUES (21, '2019-11-13 06:57:15', '2019-11-13 06:57:15', NULL, ':cold_sweat::cold_sweat::cold_sweat:', 20, 41534764, 'pppercyWang', 'https://avatars3.githubusercontent.com/u/41534764?v=4', 'https://github.com/pppercyWang');
INSERT INTO `comment` VALUES (22, '2019-11-13 07:00:01', '2019-11-13 07:00:01', NULL, ':heart_eyes::heart_eyes::heart_eyes:', 20, 41534764, 'pppercyWang', 'https://avatars3.githubusercontent.com/u/41534764?v=4', 'https://github.com/pppercyWang');
INSERT INTO `comment` VALUES (23, '2019-11-13 07:00:08', '2019-11-13 07:00:08', NULL, ':anguished::anguished::anguished:', 20, 41534764, 'pppercyWang', 'https://avatars3.githubusercontent.com/u/41534764?v=4', 'https://github.com/pppercyWang');
INSERT INTO `comment` VALUES (24, '2019-11-13 07:01:56', '2019-11-13 07:01:56', NULL, 'cccc:cry::cry::cry::dizzy_face::laughing:', 20, 41534764, 'pppercyWang', 'https://avatars3.githubusercontent.com/u/41534764?v=4', 'https://github.com/pppercyWang');
INSERT INTO `comment` VALUES (25, '2019-11-13 07:02:04', '2019-11-13 07:02:04', NULL, 'cccc', 25, 41534764, 'pppercyWang', 'https://avatars3.githubusercontent.com/u/41534764?v=4', 'https://github.com/pppercyWang');
INSERT INTO `comment` VALUES (26, '2019-11-13 07:02:11', '2019-11-13 07:02:11', NULL, 'sss', 23, 41534764, 'pppercyWang', 'https://avatars3.githubusercontent.com/u/41534764?v=4', 'https://github.com/pppercyWang');
INSERT INTO `comment` VALUES (27, '2019-11-13 07:08:09', '2019-11-13 07:08:09', NULL, 'cccc', 23, 41534764, 'pppercyWang', 'https://avatars3.githubusercontent.com/u/41534764?v=4', 'https://github.com/pppercyWang');
INSERT INTO `comment` VALUES (28, '2019-11-13 07:08:11', '2019-11-13 07:08:11', NULL, 'vvvv', 23, 41534764, 'pppercyWang', 'https://avatars3.githubusercontent.com/u/41534764?v=4', 'https://github.com/pppercyWang');
INSERT INTO `comment` VALUES (29, '2019-11-13 07:08:17', '2019-11-13 07:08:17', NULL, 'www', 23, 41534764, 'pppercyWang', 'https://avatars3.githubusercontent.com/u/41534764?v=4', 'https://github.com/pppercyWang');

-- ----------------------------
-- Table structure for git_user
-- ----------------------------
DROP TABLE IF EXISTS `git_user`;
CREATE TABLE `git_user`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `username` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `avatar_url` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `github_url` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 41534765 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of git_user
-- ----------------------------
INSERT INTO `git_user` VALUES (41534764, 'pppercyWang', 'https://avatars3.githubusercontent.com/u/41534764?v=4', 'https://github.com/pppercyWang');

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `created_at` timestamp(0) NULL DEFAULT NULL,
  `updated_at` timestamp(0) NULL DEFAULT NULL,
  `deleted_at` timestamp(0) NULL DEFAULT NULL,
  `username` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `password` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `email` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `mobile` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `qq` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `gender` int(11) NULL DEFAULT NULL,
  `age` int(11) NULL DEFAULT NULL,
  `remark` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `username`(`username`) USING BTREE,
  UNIQUE INDEX `mobile`(`mobile`) USING BTREE,
  INDEX `idx_user_deleted_at`(`deleted_at`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES (1, '2019-08-08 02:47:37', '2019-08-08 02:47:37', NULL, 'percy', 'e10adc3949ba59abbe56e057f20f883e', '', '', '', '', 0, 0, '');

SET FOREIGN_KEY_CHECKS = 1;
